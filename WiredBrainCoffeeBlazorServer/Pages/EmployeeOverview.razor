@page "/labApparatus/list"
@inject IDbContextFactory<EmployeeManagerDBContext> ContextFactory

<PageTitle>Employees</PageTitle>

<h1>Welcome to the Harmonic Motion Lab Photos</h1>

<div>
    <a href="\HarmonicMotionLabPhotos\MassOnASpring.jpg" class="logo"> </a>
    <h5>Simple Pendulum</h5>
</div>

<div>
    <a href="HarmonicMotionLabPhotos\SimplePendulum.jpg"> </a>
    <h5>Simple Pendulum</h5>

    <p>Just kidding now we will list employees</p>
</div>

@if(Employees is null)
{
    <div>Loading...there are no employees</div>
}
else {
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Firstname</th>
                <th>Lastname</th>
                <th>IsDeveloper</th>
                <th>Department</th>

            </tr>
        </thead>

        <tbody>
            @foreach(var employee in Employees)
            {
                <tr>
                    <td>@employee.FirstName</td>
                    <td>@employee.LastName</td>
                    <td>@employee.IsDeveloper</td>
                    <td>@employee.Department?.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Employee[]? Employees { get; set; }
    protected override async Task OnInitializedAsync()
    {
        using var context = ContextFactory.CreateDbContext();

        Employees = await context.Employees
                .Include(emp => emp.Department)
                .ToArrayAsync();
    }
}



<SurveyPrompt Title="How is Blazor working for you?" />
